# Generated by Django 4.2.21 on 2025-06-12 16:36

import Agri_Connect_CI.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_annonce', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('active', 'Active'), ('réservée', 'Réservée'), ('archivée', 'Archivée')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CapaciteVehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Capacité de véhicule',
                'verbose_name_plural': 'Capacités de véhicules',
                'ordering': ['valeur'],
            },
        ),
        migrations.CreateModel(
            name='CategorieProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('organisme_emetteur', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conditionnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Devise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EtatLivreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('reponse', models.TextField()),
                ('categorie', models.CharField(choices=[('general', 'Général'), ('acheteur', 'Acheteur'), ('producteur', 'Producteur'), ('livreur', 'Livreur')], max_length=20)),
                ('ordre_affichage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Livreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('etat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.etatlivreur')),
            ],
        ),
        migrations.CreateModel(
            name='MiseEnRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_contact', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MoyenTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut_activite', models.DateField()),
                ('methode_production', models.CharField(choices=[('bio', 'Bio'), ('conventionnel', 'Conventionnel'), ('permaculture', 'Permaculture'), ('autre', 'Autre')], max_length=20)),
                ('description_longue', models.TextField()),
                ('specialites', models.CharField(blank=True, max_length=255, null=True)),
                ('annee_debut', models.IntegerField(default=2025)),
            ],
        ),
        migrations.CreateModel(
            name='TypeAnnonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeLivreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UniteMesure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('abbr', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ville', models.CharField(max_length=100)),
                ('quartier', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': "Ce nom d'utilisateur est déjà pris."}, max_length=30, unique=True, validators=[django.core.validators.RegexValidator(message="Le nom d'utilisateur ne peut contenir que des lettres, chiffres et @/./+/-/_", regex='^[\\w.@+-]+\\Z')])),
                ('full_name', models.CharField(max_length=100, verbose_name='Nom complet')),
                ('role', models.CharField(choices=[('producteur', 'Producteur'), ('acheteur', 'Acheteur'), ('livreur', 'Livreur')], default='acheteur', max_length=20)),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='profils/')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('statut_verification', models.CharField(choices=[('vérifié', 'Vérifié'), ('non vérifié', 'Non vérifié')], default='non vérifié', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.zone', verbose_name='Zone de résidence')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Agri_Connect_CI.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('immatriculation', models.CharField(max_length=50)),
                ('photo_url', models.ImageField(upload_to='vehicules/')),
                ('capacite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Agri_Connect_CI.capacitevehicule', verbose_name='Capacité du véhicule')),
                ('livreur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur')),
            ],
        ),
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_tarif', models.CharField(max_length=50)),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('devise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.devise')),
            ],
        ),
        migrations.CreateModel(
            name='ProducteurProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.categorieproduit')),
                ('producteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.producteur')),
            ],
        ),
        migrations.AddField(
            model_name='producteur',
            name='utilisateur',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PositionActuelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('livreur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('evaluateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('livreur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notations', to='Agri_Connect_CI.livreur')),
                ('mise_en_relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.miseenrelation')),
                ('producteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notations', to='Agri_Connect_CI.producteur')),
            ],
        ),
        migrations.AddField(
            model_name='miseenrelation',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='miseenrelation',
            name='livreur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur'),
        ),
        migrations.AddField(
            model_name='miseenrelation',
            name='moyen_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.typecontact'),
        ),
        migrations.AddField(
            model_name='miseenrelation',
            name='producteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.producteur'),
        ),
        migrations.CreateModel(
            name='LivreurZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livreur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.zone')),
            ],
        ),
        migrations.CreateModel(
            name='LivreurMoyenTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livreur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur')),
                ('moyen_transport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.moyentransport')),
            ],
        ),
        migrations.AddField(
            model_name='livreur',
            name='tarif',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.tarif'),
        ),
        migrations.AddField(
            model_name='livreur',
            name='type_livreur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.typelivreur'),
        ),
        migrations.AddField(
            model_name='livreur',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DisponibiliteLivreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour_semaine', models.CharField(choices=[('lundi', 'Lundi'), ('mardi', 'Mardi'), ('mercredi', 'Mercredi'), ('jeudi', 'Jeudi'), ('vendredi', 'Vendredi'), ('samedi', 'Samedi'), ('dimanche', 'Dimanche')], max_length=20)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('indisponible', 'Indisponible'), ('en_congé', 'En congé')], max_length=20)),
                ('livreur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.livreur')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.CharField(max_length=255)),
                ('type_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.typecontact')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='capacitevehicule',
            name='unite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Agri_Connect_CI.unitemesure'),
        ),
        migrations.CreateModel(
            name='AnnonceProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_produit', models.CharField(max_length=100)),
                ('quantite', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('livraison_disponible', models.BooleanField(default=False)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.annonce')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.categorieproduit')),
                ('certification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.certification')),
                ('conditionnement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.conditionnement')),
                ('devise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.devise')),
                ('unite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.unitemesure')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_image', models.ImageField(upload_to='annonces/images')),
                ('legende', models.CharField(blank=True, max_length=255, null=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.annonce')),
            ],
        ),
        migrations.AddField(
            model_name='annonce',
            name='auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='annonce',
            name='type_annonce',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.typeannonce'),
        ),
        migrations.AddField(
            model_name='annonce',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Agri_Connect_CI.zone'),
        ),
        migrations.CreateModel(
            name='Favoris',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agri_Connect_CI.annonce')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'annonce')},
            },
        ),
    ]
